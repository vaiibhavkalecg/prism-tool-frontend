<div class="container-fluid py-4 bg-dark text-light">
  <!-- Header Section with AI-like styling -->
  <div class="header-section p-4 mb-4 rounded-3 bg-dark border border-secondary position-relative overflow-hidden">
    <!-- Abstract AI background pattern -->
    <div class="position-absolute" style="top: 0; right: 0; bottom: 0; left: 0; opacity: 0.1; pointer-events: none;">
      <svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg">
        <pattern id="ai-pattern" width="50" height="50" patternUnits="userSpaceOnUse">
          <path d="M25,0 L50,25 L25,50 L0,25 Z" fill="none" stroke="#0d6efd" stroke-width="1"></path>
          <circle cx="25" cy="25" r="3" fill="#0d6efd"></circle>
        </pattern>
        <rect width="100%" height="100%" fill="url(#ai-pattern)"></rect>
      </svg>
    </div>
    
    <div class="d-flex justify-content-between align-items-center position-relative">
      <div>
        <h1 class="text-light fw-bold">
          <i class="bi bi-cpu me-2 text-primary"></i>AI Bot Dashboard
        </h1>
        <p class="text-secondary">Neural Network Operations Center</p>
      </div>
      <div>
        <button class="btn btn-outline-secondary me-2" title="Refresh" (click)="refreshDashboard()">
          <i class="bi bi-arrow-clockwise"></i>
        </button>
        <button class="btn btn-primary me-2" title="Create Bot" (click)="openCreateBotPopup()">
          <i class="bi bi-plus-lg"></i>
        </button>
        <button class="btn btn-outline-danger" title="Logout" (click)="logout()">
          <i class="bi bi-box-arrow-right"></i>
        </button>
      </div>
    </div>
  </div>

  <!-- Dashboard Stats - More Modern AI Feel -->
  <div class="row mb-4">
    <div class="col-md-4 mb-3">
      <div class="card bg-dark border border-primary rounded-3 shadow-sm">
        <div class="card-body position-relative overflow-hidden">
          <!-- Abstract circles in background -->
          <div class="position-absolute" style="top: -20px; right: -20px; opacity: 0.1;">
            <svg width="120" height="120" viewBox="0 0 120 120">
              <circle cx="60" cy="60" r="50" fill="none" stroke="#0d6efd" stroke-width="2"></circle>
            </svg>
          </div>
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <h6 class="text-primary fw-bold mb-1">Total Bots</h6>
              <h2 class="text-light">{{ bots.length }}</h2>
            </div>
            <i class="bi bi-robot text-primary" style="font-size: 2rem;"></i>
          </div>
          <div class="progress bg-secondary" style="height: 4px;">
            <div class="progress-bar bg-primary" role="progressbar" style="width: 75%"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-4 mb-3">
      <div class="card bg-dark border border-success rounded-3 shadow-sm">
        <div class="card-body position-relative overflow-hidden">
          <div class="position-absolute" style="top: -20px; right: -20px; opacity: 0.1;">
            <svg width="120" height="120" viewBox="0 0 120 120">
              <circle cx="60" cy="60" r="50" fill="none" stroke="#198754" stroke-width="2"></circle>
            </svg>
          </div>
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <h6 class="text-success fw-bold mb-1">Active Bots</h6>
              <h2 class="text-light">{{ getActiveBots() }}</h2>
            </div>
            <i class="bi bi-lightning-charge text-success" style="font-size: 2rem;"></i>
          </div>
          <div class="progress bg-secondary" style="height: 4px;">
            <div class="progress-bar bg-success" role="progressbar" style="width: 65%"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-4 mb-3">
      <div class="card bg-dark border border-warning rounded-3 shadow-sm">
        <div class="card-body position-relative overflow-hidden">
          <div class="position-absolute" style="top: -20px; right: -20px; opacity: 0.1;">
            <svg width="120" height="120" viewBox="0 0 120 120">
              <circle cx="60" cy="60" r="50" fill="none" stroke="#ffc107" stroke-width="2"></circle>
            </svg>
          </div>
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <h6 class="text-warning fw-bold mb-1">Tool-Enabled</h6>
              <h2 class="text-light">{{ getToolEnabledBots() }}</h2>
            </div>
            <i class="bi bi-tools text-warning" style="font-size: 2rem;"></i>
          </div>
          <div class="progress bg-secondary" style="height: 4px;">
            <div class="progress-bar bg-warning" role="progressbar" style="width: 45%"></div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Search and Filter with AI-like styling -->
  <div class="row mb-4">
    <div class="col-md-6">
      <div class="input-group">
        <span class="input-group-text bg-dark text-light border-secondary">
          <i class="bi bi-search"></i>
        </span>
        <input 
          type="text" 
          class="form-control bg-dark text-light border-secondary" 
          placeholder="Search bots..." 
          [(ngModel)]="searchTerm" 
          (input)="filterBots()"
          name="search">
      </div>
    </div>
    <div class="col-md-6 d-flex justify-content-md-end mt-3 mt-md-0">
      <div class="btn-group">
        <button type="button" class="btn btn-outline-secondary active">
          <i class="bi bi-list"></i>
        </button>
        <button type="button" class="btn btn-outline-secondary">
          <i class="bi bi-grid"></i>
        </button>
      </div>
    </div>
  </div>

  <!-- Bots Table View - replacing the card grid -->
  <div class="table-responsive mb-3">
    <table class="table table-dark table-hover border-secondary">
      <thead class="table-dark border-bottom border-secondary">
        <tr>
          <th scope="col" style="width: 5%">#</th>
          <th scope="col" style="width: 25%">Bot Name</th>
          <th scope="col" style="width: 20%">Model</th>
          <th scope="col" style="width: 20%">Created</th>
          <th scope="col" style="width: 15%">Status</th>
          <th scope="col" style="width: 15%">Actions</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let bot of filteredBots; let i = index" class="align-middle">
          <td>{{ i + 1 }}</td>
          <td>
            <div class="d-flex align-items-center">
              <div class="bot-icon rounded-circle me-3 d-flex align-items-center justify-content-center" 
                   [ngClass]="bot.isToolEnabled ? 'bg-primary bg-opacity-25' : 'bg-secondary bg-opacity-25'"
                   style="width: 40px; height: 40px;">
                <i class="bi" [ngClass]="bot.isToolEnabled ? 'bi-robot text-primary' : 'bi-cpu text-secondary'"></i>
              </div>
              <div>
                <h6 class="mb-0 text-light">{{ bot.name }}</h6>
                <small class="text-secondary">{{ bot.description }}</small>
              </div>
            </div>
          </td>
          <td>{{ bot.model }}</td>
          <td>{{ bot.created_at | date:'medium' }}</td>
          <td>
            <span class="badge rounded-pill" [ngClass]="bot.isToolEnabled ? 'bg-success' : 'bg-secondary'">
              {{ bot.isToolEnabled ? 'Tools Enabled' : 'Basic' }}
            </span>
          </td>
          <td>
            <div class="d-flex">
              <button class="btn btn-sm btn-outline-primary me-2" title="Open Bot" (click)="openChatPopup(bot._id)">
                <i class="bi bi-chat-dots"></i>
              </button>
              <button class="btn btn-sm btn-outline-warning me-2" title="Edit Bot">
                <i class="bi bi-pencil"></i>
              </button>
              <button class="btn btn-sm btn-outline-danger" title="Delete Bot" (click)="deleteBot(bot._id)">
                <i class="bi bi-trash"></i>
              </button>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <!-- Empty State with AI-like styling -->
  <div class="text-center py-5" *ngIf="bots.length === 0">
    <div class="empty-state position-relative">
      <!-- Neural network background illustration -->
      <div class="position-absolute" style="top: 0; right: 0; bottom: 0; left: 0; opacity: 0.05; pointer-events: none;">
        <img src="../../assets/neuralNetworkBackground.svg" alt="Background Graphic" class="w-100 h-100 object-fit-contain" />
      </div>
      
      <i class="bi bi-cpu-fill display-1 text-primary mb-3"></i>
      <h3 class="text-light">Your Bot Network Is Empty</h3>
      <p class="text-secondary">Deploy your first neural node to get started</p>
      <button class="btn btn-primary mt-3" (click)="openCreateBotPopup()">
        <i class="bi bi-plus-lg me-2"></i>Create Bot
      </button>
    </div>
  </div>

  <!-- CREATE BOT MODAL - AI-THEMED -->
  <div *ngIf="showCreatePopup" class="modal-overlay">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content bg-dark text-light border border-primary rounded-3 shadow-lg position-relative overflow-hidden">
        <!-- Neural network background pattern -->
        <div class="position-absolute" style="top: 0; right: 0; bottom: 0; left: 0; opacity: 0.05; pointer-events: none;">
          <svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg">
            <pattern id="network-pattern" width="100" height="100" patternUnits="userSpaceOnUse">
              <circle cx="10" cy="10" r="2" fill="#0d6efd"></circle>
              <circle cx="50" cy="10" r="2" fill="#0d6efd"></circle>
              <circle cx="90" cy="10" r="2" fill="#0d6efd"></circle>
              <circle cx="10" cy="50" r="2" fill="#0d6efd"></circle>
              <circle cx="50" cy="50" r="2" fill="#0d6efd"></circle>
              <circle cx="90" cy="50" r="2" fill="#0d6efd"></circle>
              <circle cx="10" cy="90" r="2" fill="#0d6efd"></circle>
              <circle cx="50" cy="90" r="2" fill="#0d6efd"></circle>
              <circle cx="90" cy="90" r="2" fill="#0d6efd"></circle>
              <line x1="10" y1="10" x2="50" y2="10" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="50" y1="10" x2="90" y2="10" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="10" y1="10" x2="10" y2="50" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="10" y1="50" x2="10" y2="90" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="10" y1="50" x2="50" y2="50" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="50" y1="50" x2="90" y2="50" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="10" y1="90" x2="50" y2="90" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="50" y1="90" x2="90" y2="90" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="90" y1="10" x2="90" y2="50" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="90" y1="50" x2="90" y2="90" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="50" y1="10" x2="50" y2="50" stroke="#0d6efd" stroke-width="0.5"></line>
              <line x1="50" y1="50" x2="50" y2="90" stroke="#0d6efd" stroke-width="0.5"></line>
            </pattern>
            <rect width="100%" height="100%" fill="url(#network-pattern)"></rect>
          </svg>
        </div>
        
        <div class="modal-header border-bottom border-primary p-4">
          <h3 class="modal-title d-flex align-items-center">
            <i class="bi bi-robot me-2 text-primary"></i>Deploy New Neural Node
          </h3>
          <button type="button" class="btn-close btn-close-white" (click)="showCreatePopup = false"></button>
        </div>
        <div class="modal-body p-4">
          <form #botForm="ngForm" (ngSubmit)="createBot(botForm)">
            <div class="row">
              <!-- Left Column -->
              <div class="col-md-6 pe-md-4">
                <div class="mb-4">
                  <label for="botName" class="form-label text-light d-flex align-items-center">
                    <i class="bi bi-tag me-2 text-primary"></i>Bot Name
                  </label>
                  <input type="text" class="form-control form-control-lg bg-dark text-light border-secondary" 
                         id="botName" name="name" ngModel required placeholder="Enter a unique name">
                </div>
                
                <div class="mb-4">
                  <label for="botDescription" class="form-label text-light d-flex align-items-center">
                    <i class="bi bi-chat-square-text me-2 text-primary"></i>Description
                  </label>
                  <textarea class="form-control bg-dark text-light border-secondary" 
                            id="botDescription" name="description" ngModel required rows="3" 
                            placeholder="What does this bot do?"></textarea>
                </div>
                
                <div class="mb-4">
                  <label for="botModel" class="form-label text-light d-flex align-items-center">
                    <i class="bi bi-cpu me-2 text-primary"></i>AI Model
                  </label>
                  <select class="form-select bg-dark text-light border-secondary" 
                          id="botModel" name="model" ngModel required>
                    <option value="" disabled selected>Select a model</option>
                    <option value="mistralai/Mistral-7B-Instruct">Mistral-7B-Instruct</option>
                  </select>
                </div>
              </div>
              
              <!-- Right Column -->
              <div class="col-md-6 ps-md-4">
                <div class="mb-4">
                  <label for="textDocument" class="form-label text-light d-flex align-items-center">
                    <i class="bi bi-database me-2 text-primary"></i>Knowledge Base
                  </label>
                  <div class="input-group">
                    <input type="file" class="form-control bg-dark text-light border-secondary" 
                           id="textDocument" name="text_document" (change)="onTextDocChange($event)" required>
                    <span class="input-group-text bg-dark text-secondary border-secondary">
                      <i class="bi bi-file-earmark-text"></i>
                    </span>
                  </div>
                  <small class="text-secondary d-block mt-2">Upload documents for your bot's knowledge base</small>
                </div>
                
                <div class="mb-4">
                  <div class="d-flex justify-content-between align-items-center mb-2">
                    <label for="toolDocument" class="form-label text-light mb-0 d-flex align-items-center">
                      <i class="bi bi-tools me-2 text-primary"></i>Tool Configuration
                    </label>
                    <div class="form-check form-switch">
                      <input type="checkbox" class="form-check-input" 
                             id="toolsEnabled" name="isToolEnabled" [(ngModel)]="isToolEnabled">
                      <label class="form-check-label text-light" for="toolsEnabled">Enable Tools</label>
                    </div>
                  </div>
                  <div class="input-group">
                    <input type="file" class="form-control bg-dark text-light border-secondary" 
                           id="toolDocument" name="tool_document" (change)="onToolDocChange($event)"
                           [disabled]="!isToolEnabled">
                    <span class="input-group-text bg-dark text-secondary border-secondary">
                      <i class="bi bi-tools"></i>
                    </span>
                  </div>
                  <small class="text-secondary d-block mt-2">Optional configuration for tool-enabled bots</small>
                </div>
                
                <div class="alert bg-dark border-primary mt-4" *ngIf="isToolEnabled">
                  <div class="d-flex">
                    <i class="bi bi-lightbulb text-primary me-2 fs-5"></i>
                    <div>
                      <strong class="text-light">Intelligence Expansion</strong>
                      <p class="mb-0 text-secondary small">Tool configuration allows your bot to perform actions like searching the web, generating images, accessing APIs, sending Emails, etc.</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="d-flex justify-content-end gap-3 mt-4 pt-3 border-top border-secondary">
              <button type="button" class="btn btn-outline-secondary" (click)="showCreatePopup = false">
                <i class="bi bi-x-lg me-1"></i>Cancel
              </button>
              <button type="submit" class="btn btn-primary btn-lg" [disabled]="botForm.invalid">
                <i class="bi bi-robot me-2"></i>Deploy Bot
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Chat Popups -->  
<div *ngFor="let chat of activeChats; let i = index" 
     class="chat-popup-container" 
     [ngClass]="{'d-none': chat.isMinimized}"
     [ngStyle]="{'z-index': 1050 + chat.position, 'right': 20 + (chat.position * 20) + 'px'}">
  <div class="chat-popup" [ngClass]="{'active-chat': chat.isActive}" (click)="setActiveChat(i)">
    <div class="chat-popup-header">
      <div class="d-flex align-items-center">
        <div class="avatar-container me-3">
          <div class="avatar bg-primary text-white">
            <i class="bi bi-robot"></i>
          </div>
        </div>
        <div>
          <h5 class="mb-0">{{ chat.botName }}</h5>
          <small class="text-muted">Online</small>
        </div>
      </div>
      <div>
        <button class="btn btn-sm btn-outline-secondary me-2" (click)="minimizeChatPopup(i); $event.stopPropagation();">
          <i class="bi bi-dash-lg"></i>
        </button>
        <button class="btn btn-sm btn-outline-danger" (click)="closeChatPopup(i); $event.stopPropagation();">
          <i class="bi bi-x-lg"></i>
        </button>
      </div>
    </div>
    <div class="chat-popup-body">
      <app-chat [botId]="chat.botId" [popupMode]="true"></app-chat>
    </div>
  </div>
</div>

<!-- Minimized Chat Indicators -->
<div class="minimized-chats-container">
  <div *ngFor="let chat of activeChats; let i = index" 
       class="chat-minimized" 
       [ngClass]="{'d-none': !chat.isMinimized}"
       (click)="restoreChatPopup(i)">
    <div class="avatar bg-primary text-white">
      <i class="bi bi-robot"></i>
    </div>
    <span class="ms-2">{{ chat.botName }}</span>
  </div>
</div>